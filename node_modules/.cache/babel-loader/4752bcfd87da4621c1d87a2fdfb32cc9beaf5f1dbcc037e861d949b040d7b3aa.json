{"ast":null,"code":"var _jsxFileName = \"/Users/guruprakashreddyavilala/movie-info/src/genres.js\",\n  _s = $RefreshSig$();\nimport Genre from \"./genre\";\nimport useFecth from \"./usefectch\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Genres = () => {\n  _s();\n  const {\n    extra_link\n  } = useParams();\n  const {\n    data: genres,\n    isPending,\n    error,\n    setUrl\n  } = useFecth('https://api.themoviedb.org/3/genre/' + extra_link + '/list?api_key=05b670c12d1973fe82919a005ef06481');\n  useEffect(() => {\n    console.log(genres);\n  }, [genres]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar is-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-start my-3\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            style: () => ({\n              textDecoration: 'none'\n            }),\n            className: _ref => {\n              let {\n                isActive\n              } = _ref;\n              return isActive ? 'navbar-item has-text-weight-bold tag is-light is-large mx-2' : 'navbar-item has-text-weight-bold mx-2';\n            },\n            to: \"\",\n            children: \"MOVIES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            style: () => ({\n              textDecoration: 'none'\n            }),\n            className: _ref2 => {\n              let {\n                isActive\n              } = _ref2;\n              return isActive ? 'navbar-item has-text-weight-bold tag is-light is-large mx-2' : 'navbar-item has-text-weight-bold mx-2';\n            },\n            to: \"/genre/tv\",\n            children: \"TVSHOWS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), genres && genres.genres.map(genre => /*#__PURE__*/_jsxDEV(Genre, {\n      genre: genre,\n      extra_link: extra_link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_s(Genres, \"W3lkqMwaovd5Mc5TeM7R9iTfbCE=\", false, function () {\n  return [useParams, useFecth];\n});\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["Genre","useFecth","NavLink","useParams","useEffect","Genres","extra_link","data","genres","isPending","error","setUrl","console","log","textDecoration","isActive","map","genre"],"sources":["/Users/guruprakashreddyavilala/movie-info/src/genres.js"],"sourcesContent":["import Genre from \"./genre\";\nimport useFecth from \"./usefectch\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst Genres = () => {\n\n    const {extra_link} = useParams();\n    \n    const {data:genres, isPending, error, setUrl} = useFecth('https://api.themoviedb.org/3/genre/'+extra_link+'/list?api_key=05b670c12d1973fe82919a005ef06481');\n\n    useEffect(()=>{\n        console.log(genres);\n    },[genres])\n\n    return (\n        <>\n        <nav className=\"navbar is-white\">\n            <div className=\"navbar-menu\">\n                <div className=\"navbar-start my-3\">\n                        <NavLink style={()=>({textDecoration:'none'})} className={({isActive})=>(isActive?'navbar-item has-text-weight-bold tag is-light is-large mx-2':'navbar-item has-text-weight-bold mx-2')} to=\"\">MOVIES</NavLink>\n                        <NavLink style={()=>({textDecoration:'none'})} className={({isActive})=>(isActive?'navbar-item has-text-weight-bold tag is-light is-large mx-2':'navbar-item has-text-weight-bold mx-2')} to=\"/genre/tv\">TVSHOWS</NavLink>\n                </div>\n            </div>\n        </nav>\n        {genres && genres.genres.map((genre)=>\n        <Genre genre={genre} extra_link={extra_link}/>\n        )}\n        </> \n    );\n}\n \nexport default Genres;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,OAAO,EAAEC,SAAS,QAAQ,kBAAkB;AACrD,SAASC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAElC,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEjB,MAAM;IAACC;EAAU,CAAC,GAAGH,SAAS,EAAE;EAEhC,MAAM;IAACI,IAAI,EAACC,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGV,QAAQ,CAAC,qCAAqC,GAACK,UAAU,GAAC,gDAAgD,CAAC;EAE3JF,SAAS,CAAC,MAAI;IACVQ,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACvB,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEX,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,iBAAiB;MAAA,uBAC5B;QAAK,SAAS,EAAC,aAAa;QAAA,uBACxB;UAAK,SAAS,EAAC,mBAAmB;UAAA,wBAC1B,QAAC,OAAO;YAAC,KAAK,EAAE,OAAK;cAACM,cAAc,EAAC;YAAM,CAAC,CAAE;YAAC,SAAS,EAAE;cAAA,IAAC;gBAACC;cAAQ,CAAC;cAAA,OAAIA,QAAQ,GAAC,6DAA6D,GAAC,uCAAuC;YAAA,CAAE;YAAC,EAAE,EAAC,EAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAU,eAChN,QAAC,OAAO;YAAC,KAAK,EAAE,OAAK;cAACD,cAAc,EAAC;YAAM,CAAC,CAAE;YAAC,SAAS,EAAE;cAAA,IAAC;gBAACC;cAAQ,CAAC;cAAA,OAAIA,QAAQ,GAAC,6DAA6D,GAAC,uCAAuC;YAAA,CAAE;YAAC,EAAE,EAAC,WAAW;YAAA,UAAC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA;MAC5N;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACJ,EACLP,MAAM,IAAIA,MAAM,CAACA,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBACnC,QAAC,KAAK;MAAC,KAAK,EAAEA,KAAM;MAAC,UAAU,EAAEX;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,CAC7C;EAAA,gBACE;AAEX,CAAC;AAAA,GAzBKD,MAAM;EAAA,QAEaF,SAAS,EAEkBF,QAAQ;AAAA;AAAA,KAJtDI,MAAM;AA2BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}